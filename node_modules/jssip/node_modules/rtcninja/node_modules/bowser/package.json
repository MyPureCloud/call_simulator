{
  "name": "bowser",
  "description": "a browser detector",
  "keywords": [
    "ender",
    "browser",
    "sniff",
    "detection"
  ],
  "version": "1.0.0",
  "homepage": "https://github.com/ded/bowser",
  "author": {
    "name": "Dustin Diaz",
    "email": "dustin@dustindiaz.com",
    "url": "http://dustindiaz.com"
  },
  "main": "./bowser.js",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ded/bowser.git"
  },
  "devDependencies": {
    "smoosh": "*",
    "mocha": "*"
  },
  "bugs": {
    "url": "https://github.com/ded/bowser/issues"
  },
  "directories": {
    "test": "test"
  },
  "scripts": {
    "test": "make test"
  },
  "license": "MIT",
  "readme": "## Bowser\nA Browser detector. Because sometimes, there is no other way, and not even good modern browsers always provide good feature detection mechanisms.\n\n[![bowser ci](https://secure.travis-ci.org/ded/bowser.png)](https://travis-ci.org/ded/bowser/)\n\nSo... it works like this:\n\n``` js\nif (bowser.msie && bowser.version <= 6) {\n  alert('Hello China');\n}\n```\n\n## Flags set for detected Browsers[Engines]\n\n  * `chrome`[`webkit`]\n  * `firefox`[`gecko`]\n  * `msie`\n  * `msedge`\n  * Android native browser as `android`[`webkit`]\n  * iOS native browser as `ios`[`webkit`]\n  * `opera`[`webkit` if >12]\n  * `phantom`[`webkit`]\n  * `safari`[`webkit`]\n  * `seamonkey`[`gecko`]\n  * BlackBerry native browser as `blackberry`[`webkit`]\n  * WebOS native browser as `webos`[`webkit`]\n  * Amazon Kindle browser as `silk`[`webkit`]\n  * Bada browser as `bada`[`webkit`]\n  * Tizen browser as `tizen`[`webkit`]\n  * Sailfish browser as `sailfish`[`gecko`]\n\nFor all detected browsers the browser version is set in the `version` field.\n\n## Flags set for detected mobile Operating Systems\n\n  * `android`\n  * Windows Phone as `windowsphone`\n  * `ios` (`iphone`/`ipad`/`ipod`)\n  * `blackberry`\n  * `firefoxos`\n  * `webos` (`touchpad`)\n  * `bada`\n  * `tizen`\n  * `sailfish`\n\nAndroid, iOS, Windows Phone, WebOS, Bada, and Tizen will all report the OS version number if it is contained in the UA string in the `osversion` field. iOS is always reported as `ios` and additionally as `iphone`/`ipad`/`ipod`, whichever one matches best. If WebOS device is an HP TouchPad the flag `touchpad` is additionally set.\n\nAll detected mobile OSes are additionally flagged `mobile`, **if they are not powering a tablet device**. If a tablet device is detected, the flag `tablet` is set instead.\n\n### Notes\nSafari, Chrome and some other minor browsers will report that they have `webkit` engines, Firefox and Seamonkey will report that they have `gecko` engines.\n\n``` js\nif (bowser.webkit) {\n  // do stuff with safari & chrome & opera & android & blackberry & webos & silk\n}\n```\n\n### Ender Support\n\n`package.json`\n\n``` json\n\"dependencies\": {\n  \"bowser\": \"x.x.x\"\n}\n```\n\n``` js\nif (require('bowser').chrome) {\n  alert('Hello Silicon Valley')\n}\n```\n\n### Graded Browser Support\n\n``` js\nif (bowser.a) {\n  // support full feature set\n}\nelse if (bowser.c) {\n  // serve degraded version\n}\nelse {\n  // unsupported (bowser.x)\n}\n```\n\n### Contributing\nIf you'd like to contribute a change to bowser, modify the files in `src/`, then run the following (you'll need node + npm installed):\n\n``` sh\n$ npm install\n$ make test\n```\n\nPlease do not check-in the built files `bowser.js` and `bowser.min.js` in pull requests.\n\n### Adding tests\nSee the list in `src/useragents.js` with example user agents and their expected bowser object.\n\nWhenever you add support for new browsers or notice a bug / mismatch, please update the list and\ncheck if all tests are still passing.\n\n### License\nLicensed as MIT. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE file for more details.\n",
  "readmeFilename": "README.md",
  "_id": "bowser@1.0.0",
  "dist": {
    "shasum": "21d798827dc359a51cfcf8f6236d983bc0518acd"
  },
  "_from": "bowser@^1.0.0",
  "_resolved": "https://registry.npmjs.org/bowser/-/bowser-1.0.0.tgz"
}
